#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LCTRL Q     &kp L         &kp U      &kp COMMA  &kp PERIOD                                      &kp F            &kp W  &kp R  &kp Y  &kp P
&mt LEFT_ALT E  &kp I         &kp A      &kp O      &kp MINUS      &none                &kp ESCAPE  &kp K            &kp T  &kp N  &kp S  &lt 1 H
&mt LEFT_GUI Z  &kp X         &kp C      &kp V      &kp SLASH      &kp TAB              &none       &kp G            &kp D  &kp M  &kp J  &lt 2 B
&kp LEFT_GUI    &kp LEFT_ALT  &kp LCTRL  &kp LANG5  &kp BACKSPACE  &kp RIGHT_SHIFT      &kp SPACE   &mt LANG4 ENTER                       &mo 2
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        NUM {
            bindings = <
&none            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp CARET                                       &kp DLLR       &kp LPAR          &kp RPAR           &kp SEMICOLON  &none
&mt LEFT_ALT N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp AMPS       &none                &kp ESCAPE  &kp AT         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COLON      &mo 1
&kp LEFT_ALT     &kp N7        &kp N8        &kp N9        &kp PIPE       &kp TAB              &none       &kp RS(UNDER)  &kp DQT           &kp SINGLE_QUOTE   &none          &mo 2
&kp LEFT_GUI     &kp LEFT_ALT  &kp LCTRL     &kp LANG5     &kp BACKSPACE  &kp RIGHT_SHIFT      &kp SPACE   &kp ENTER                                                          &mo 2
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        ARROW_FN {
            bindings = <
&kp LCTRL     &none               &kp UP_ARROW        &none                &none                                                       &none                     &kp F1     &kp F2     &kp F3  &bt BT_CLR_ALL
&kp LEFT_ALT  &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW      &none          &none                   &none                &kp LS(LG(LC(NUMBER_4)))  &mkp LCLK  &mkp RCLK  &none   &mo 1
&kp LEFT_GUI  &kp LS(LEFT_ARROW)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT_ARROW)  &none          &none                   &none                &none                     &none      &none      &none   &mo 2
&kp LEFT_GUI  &kp LEFT_ALT        &kp LCTRL           &none                &kp BACKSPACE  &kp LC(LEFT_ARROW)      &kp LC(RIGHT_ARROW)  &kp F13                                                 &mo 2
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };
    };
};
