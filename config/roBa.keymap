#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp L         &kp U      &kp COMMA  &kp PERIOD                                     &kp F      &kp W  &kp R  &kp Y  &kp P
&kp E         &kp I         &kp A      &kp O      &kp MINUS      &none               &kp ESCAPE  &kp K      &kp T  &kp N  &kp S  &kp H
&kp Z         &kp X         &kp C      &kp V      &kp SLASH      &kp TAB             &none       &kp G      &kp D  &kp M  &kp J  &kp B
&kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &mo 1      &kp BACKSPACE  &kp LEFT_SHIFT      &kp SPACE   &kp ENTER                       &mo 2
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        NUM {
            bindings = <
&none         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp CARET                           &kp DLLR   &kp LPAR          &kp RPAR           &none          &none
&kp N0        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp AMPS   &none        &kp ESCAPE  &kp AT     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &kp COLON
&kp LEFT_ALT  &kp N7        &kp N8        &kp N9        &kp PIPE   &kp TAB      &none       &kp UNDER  &kp DQT           &kp SINGLE_QUOTE   &none          &kp RIGHT_SHIFT
&kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL     &mo 1         &none      &none        &kp LANG5   &kp LANG4                                                      &mo 2
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        ARROW_FN {
            bindings = <
&none         &none               &kp UP_ARROW        &none                &none                                                    &none                     &kp F1     &kp F2     &kp F3  &bt BT_CLR_ALL
&kp LCTRL     &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW      &none       &none                   &none                &kp LS(LG(LC(NUMBER_4)))  &mkp LCLK  &mkp RCLK  &none   &none
&kp LEFT_ALT  &kp LS(LEFT_ARROW)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT_ARROW)  &none       &none                   &none                &none                     &none      &none      &none   &none
&kp LEFT_GUI  &kp LEFT_ALT        &kp LCTRL           &mo 1                &kp DELETE  &kp LC(LEFT_ARROW)      &kp LC(RIGHT_ARROW)  &kp F13                                                 &mo 2
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };
    };
};
